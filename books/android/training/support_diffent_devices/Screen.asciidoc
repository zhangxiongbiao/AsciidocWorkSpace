== 不同尺寸
:sectnums:

_Android_ 使用 _size_ 和 _density_ 表示尺寸。

* _size_ 默认有 _small_, _normal_, _large_, _xlarge_
* _density_ 默认有 _ldpi_, _mdpi_, _hdpi_, _xhdpi_


=== 术语
https://developer.android.com/guide/practices/screens_support.html[参考链接]

屏幕尺寸::
  按屏幕对角测量的实际物理尺寸，就是屏幕对角线的尺寸，单位为英寸。
+
image::images\Screen-fbaf5.png[]

屏幕密度(dpi)::
屏幕物理区域中的像素量；通常称为 dpi（每英寸 点数）。例如， 与“正常”或“高”密度屏幕相比，“低”密度屏幕在给定物理区域的像素较少。
+
为简便起见，Android 将所有屏幕密度分组为六种通用密度： 低、中、高、超高、超超高和超超超高。
+
_dots per inch_ ， 直接来说就是一英寸多少个像素点。常见取值 120，160，240。我一般称作像素密度，简称密度。 _Android_ 中的标准DPI为160.

密度::
指的是与标准DPI的比例。如DPI为240，则其密度为 _240/160=1.5_ 。

方向::
从用户视角看屏幕的方向，即横屏还是 竖屏，分别表示屏幕的纵横比是宽还是高。请注意， 不仅不同的设备默认以不同的方向操作，而且 方向在运行时可随着用户旋转设备而改变。

分辨率::
屏幕上物理像素的总数。添加对多种屏幕的支持时， 应用不会直接使用分辨率；而只应关注通用尺寸和密度组指定的屏幕 尺寸及密度。

密度无关像素 (dp)::
在定义 UI 布局时应使用的虚拟像素单位，用于以密度无关方式表示布局维度 或位置。

+
密度无关像素等于 160 dpi 屏幕上的一个物理像素，这是 系统为“中”密度屏幕假设的基线密度。在运行时，系统 根据使用中屏幕的实际密度按需要以透明方式处理 dp 单位的任何缩放 。dp 单位转换为屏幕像素很简单： px = dp * (dpi / 160)。 例如，在 240 dpi 屏幕上，1 dp 等于 1.5 物理像素。 **在定义应用的 UI 时应始终使用 dp 单位**  ，以确保在不同密度的屏幕上正常显示 UI。

=== 摘要

image::images\Screen-47d6d.png[]

=== 创建不同的 _Layouts_

1. 使用 _layout_ + 后缀来保存其它尺寸的目录。
+
image::images\Screen-97be4.png[]
+
[NOTE]
====
_Android_ 默认情况下会自动拉伸你的布局大小以适应屏幕尺寸，但是为了用户体检，还是应该不同的屏幕尺寸使用不同的尺寸的资源。
====
+
.添加layout后的布局目录结构
[source,java]
----
MyProject/
    res/
        layout/
            main.xml
        layout-large/
            main.xml
----
